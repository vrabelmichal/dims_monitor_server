# Generated by Django 4.0.2 on 2022-02-02 22:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('rest_server', '0037_auto_20220107_1937'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnvironmentLogUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('captured_hour', models.DateTimeField(help_text='Datetime derived from the log file name (EnvData file).')),
                ('log_filename', models.CharField(help_text='Filename of a file on the remote station. ', max_length=260, null=True)),
                ('is_finished', models.BooleanField(help_text='Indicates if file is being presently filled-in on the station')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_server.report')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_server.station')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentLogMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_datetime', models.DateTimeField(help_text='Datetime of the measurement.')),
                ('temperature_in', models.FloatField(help_text='Value of column "temperature_in" inside the Arduino data log file (EnvData).')),
                ('temperature_out', models.FloatField(help_text='Value of column "temperature_out" inside the Arduino data log file (EnvData).')),
                ('pressure_in', models.FloatField(help_text='Value of column "pressure_in" inside the Arduino data log file (EnvData).')),
                ('pressure_out', models.FloatField(help_text='Value of column "pressure_out" inside the Arduino data log file (EnvData).')),
                ('humidity_in', models.FloatField(help_text='Value of column "humidity_in" inside the Arduino data log file (EnvData).')),
                ('humidity_out', models.FloatField(help_text='Value of column "humidity_out" inside the Arduino data log file (EnvData).')),
                ('brightness', models.FloatField(help_text='Value of column "brightness" inside the Arduino data log file (EnvData).')),
                ('fan1_rpm', models.FloatField(help_text='Value of column "fan1_rpm" inside the Arduino data log file (EnvData).')),
                ('fan2_rpm', models.FloatField(help_text='Value of column "fan2_rpm" inside the Arduino data log file (EnvData).')),
                ('fan1_pwm', models.FloatField(help_text='Value of column "fan1_pwm" inside the Arduino data log file (EnvData).')),
                ('fan2_pwm', models.FloatField(help_text='Value of column "fan2_pwm" inside the Arduino data log file (EnvData).')),
                ('log_upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_server.environmentlogupload')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_server.station')),
            ],
        ),
        migrations.AddConstraint(
            model_name='environmentlogupload',
            constraint=models.UniqueConstraint(fields=('report', 'captured_hour'), name='unique_pair_report_captured_hour'),
        ),
        migrations.AddConstraint(
            model_name='environmentlogupload',
            constraint=models.UniqueConstraint(fields=('station', 'captured_hour'), name='unique_pair_station_captured_hour'),
        ),
        migrations.AddConstraint(
            model_name='environmentlogmeasurement',
            constraint=models.UniqueConstraint(fields=('measurement_datetime', 'log_upload'), name='unique_pair_datetime_station'),
        ),
    ]
