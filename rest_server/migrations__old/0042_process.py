# Generated by Django 4.0.2 on 2022-02-18 19:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('rest_server', '0041_remove_environmentlogmeasurement_unique_pair_datetime_station_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The process name. On Windows the return value is cached after first call. Not on POSIX because the process name may change.', max_length=255, null=True)),
                ('pid', models.IntegerField(help_text='Process PID')),
                ('ppid', models.IntegerField(help_text='Parent process PID')),
                ('exe', models.CharField(blank=True, help_text='The process executable as an absolute path. On some systems this may also be an empty string. The return value is cached after first call.', max_length=255, null=True)),
                ('cmdline', models.CharField(blank=True, help_text='The command line this process has been called with as a list of strings. ', max_length=4096)),
                ('cwd', models.CharField(blank=True, help_text='The process current working directory as an absolute path.', max_length=4096)),
                ('username', models.CharField(blank=True, help_text='The name of the user that owns the process. On UNIX this is calculated by using real process uid.', max_length=64)),
                ('create_time', models.FloatField(help_text='The process creation time as a floating point number expressed in seconds since the epoch.')),
                ('cpu_percent', models.FloatField(help_text='A float representing the process CPU utilization as a percentage which can also be > 100.0 in case of a process running multiple threads on different CPUs. See: https://psutil.readthedocs.io/en/latest/#psutil.Process.cpu_percent')),
                ('memory_info_rss', models.IntegerField(help_text='The non-swapped physical memory a process has used.', verbose_name='Resident Set Size')),
                ('memory_info_vms', models.IntegerField(help_text='The total amount of virtual memory used by the process.', verbose_name='Virtual Memory Size')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_server.report')),
            ],
        ),
    ]
